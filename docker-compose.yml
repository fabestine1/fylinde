version: '3.8'

networks:
  ecommerce-network:
    name: fylinde_ecommerce-network
    driver: bridge

services:

  db:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: auth_service_db
      MYSQL_USER: fylinde
      MYSQL_PASSWORD: Sylvian
    volumes:
      - ./my.cnf:/etc/mysql/conf.d/my.cnf  # Mount the custom configuration file
      - mysql_auth_service_data:/var/lib/mysql  # Correct path for MySQL data directory
    networks:
      - ecommerce-network
    ports:
      - "3307:3307"  # Map host port 3307 to container port 3306
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    environment:
      - FLASK_APP=app.main
      - FLASK_ENV=development
      - SQLALCHEMY_DATABASE_URI=mysql+pymysql://fylinde:Sylvian@db:3307/auth_service_db
      - OIDC_CLIENT_ID=auth-service
      - OIDC_CLIENT_SECRET=G7591pgXLIA7EJyiHx0dqipaPNp7EcCW
      - OIDC_DISCOVERY_URL=http://localhost:8080/realms/fylinde_ecommerce/.well-known/openid-configuration
    volumes:
      - auth_service_data:/app
    networks:
      - ecommerce-network
    depends_on:
      - db
    ports:
      - "5004:5000"

  chatbot-service:
    build:
      context: ./ai-services/chatbots
    networks:
      - ecommerce-network
    ports:
      - "5003:5000"

  customer-service:
    build:
      context: ./customer-service
    networks:
      - ecommerce-network
    ports:
      - "5006:5000"

  fraud-detection-service:
    build:
      context: ./ai-services/fraud-detection
    networks:
      - ecommerce-network
    ports:
      - "5002:5000"

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: ["start-dev"]
    networks:
      - ecommerce-network
    ports:
      - "8080:8080"
    volumes:
      - keycloak_data:/opt/keycloak/data

  notification-service:
    build:
      context: ./notification-service
    networks:
      - ecommerce-network
    ports:
      - "5010:5000"

  order-service:
    build:
      context: ./order-service
    networks:
      - ecommerce-network
    ports:
      - "5007:5000"

  payment-service:
    build:
      context: ./payment-service
    networks:
      - ecommerce-network
    ports:
      - "5008:5000"

  product-service:
    build:
      context: ./product-service
    networks:
      - ecommerce-network
    ports:
      - "5009:5000"

  recommendation-service:
    build:
      context: ./ai-services/recommendation
    networks:
      - ecommerce-network
    ports:
      - "5011:5000"

  vendor-service:
    build:
      context: ./vendor-service
    networks:
      - ecommerce-network
    ports:
      - "5005:5000"

volumes:
  keycloak_data:
  auth_service_data:
  mysql_auth_service_data:
